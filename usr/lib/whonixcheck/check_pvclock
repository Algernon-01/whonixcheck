#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

pvclock_unwanted_detected() {
   if [ "$WHONIXCHECK_NO_EXIT_ON_PVCLOCK_DETECTION" = "1" ]; then
      local MSG="<p>PVClock Test Result: Unwanted PVClock detected, but <code>WHONIXCHECK_NO_EXIT_ON_PVCLOCK_DETECTION</code> is set, continuing.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      return 0
   fi

   local MSG="<p>PVClock Test Result:

<br></br><b>Unwanted PVClock <code>$available_clocksource</code> detected! This is unsupported by Whonix developers! Whonixcheck aborted!</b>

<p>Using PVClock together with Whonix is recommended against, because PVClock conflicts with Whonix's TimeSync design [1].</p>

<p>You probably did not follow Whonix's KVM instructions. [2]</p>

<p>This might endanger your anonymity. Do not proceed unless you know what you are doing.</p>

<p>If you wish to ignore this warning and to continue whonixcheck anyway, you can set
<code><blockquote>WHONIXCHECK_NO_EXIT_ON_PVCLOCK_DETECTION=\"1\"</blockquote></code>
in <code>/etc/whonix.d/30_whonixcheck_default</code>.</p>

<p>Recommended action:
<br></br>- Shut down.
<br></br>- Read Whonix documentation. [3]
<br></br>- Follow Whonix's KVM instructions. [2]
<br></br>- Or use Whonix a supported virtualizer.
<br></br>- Or use Whonix with Physical Isolation. [4]</p>

<p>[1] <a href=https://www.whonix.org/wiki/Dev/TimeSync>https://www.whonix.org/wiki/Dev/TimeSync</a>
<br></br>[2] <a href=https://www.whonix.org/wiki/KVM>https://www.whonix.org/wiki/KVM</a>
<br></br>[3] <a href=https://www.whonix.org>https://www.whonix.org</a>
<br></br>[4] <a href=https://www.whonix.org/wiki/Physical_Isolation>https://www.whonix.org/wiki/Physical_Isolation</a>
</p>
</p>"

   $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
   $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   EXIT_CODE="1"
   cleanup "1"
   return 0
}

check_pvclock() {
   if [ -f "/var/run/qubes-whonix/qubes.SetDateTime" ]; then
      qubes_set_date_time_content="$(cat "/var/run/qubes-whonix/qubes.SetDateTime")" || true
      local MSG="<p>\
PVClock Result: dom0 is telling us the time. \
File <code>/var/run/qubes-whonix/qubes.SetDateTime</code> exists. \
Its content is <code>$qubes_set_date_time_content</code>. \
This is non-ideal. A known issue. Contributions happily considered. Read more: <a href=https://phabricator.whonix.org/T397>https://phabricator.whonix.org/T397</a></p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   fi

   if [ ! -f "/sys/devices/system/clocksource/clocksource0/current_clocksource" ]; then
      local MSG="<p>PVClock Result: <code>/sys/devices/system/clocksource/clocksource0/current_clocksource</code> does not exist, ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      return 0
   fi

   local current_clocksource available_clocksource
   current_clocksource="$(cat "/sys/devices/system/clocksource/clocksource0/current_clocksource")" || true
   available_clocksource="$(cat "/sys/devices/system/clocksource/clocksource0/available_clocksource")" || true

   if [ "$current_clocksource" = "xen" ]; then
      local MSG="<p>PVClock Result: <code>/sys/devices/system/clocksource/clocksource0/current_clocksource</code> exist, is <code>$current_clocksource</code>. \
This is non-ideal. A known issue. Contributions happily considered. Read more: <a href=https://phabricator.whonix.org/T389>https://phabricator.whonix.org/T389</a></p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      return 0
   fi

   if [ "$current_clocksource" = "kvm-clock" ]; then
      pvclock_unwanted_detected
      return 0
   fi

   local MSG="<p>PVClock Result: <code>/sys/devices/system/clocksource/clocksource0/current_clocksource</code> exist, is <code>$current_clocksource</code>.</p>"
   if [ "$verbose" -ge "1" ]; then
      $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
   fi
   return 0
}
