#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

check_hostname() {
   ## Initialize local variables and fallbacks.
   local hostname_exit_code_was_non_zero="false"
   local hostname_discouraged_setting_detected="false"

   local hostname_exit_code="0"
   hostname_fqdn_output="$(hostname --fqdn 2>&1)" || { hostname_exit_code="$?" ; true; };
   if [ ! "$hostname_exit_code" = "0" ]; then
      hostname_exit_code_was_non_zero="true"
   fi
   if [ "$hostname_fqdn_output" = "host.localdomain" ]; then
      local MSG="<p>Check Hostname Result: \"hostname --fqdn\" output is \"host.localdomain\", ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   else
      hostname_discouraged_setting_detected="true"
      local MSG="<p>Check Hostname Result: <b>\"hostname --fqdn\" output is not \
\"host.localdomain\", it is \"$hostname_fqdn_output\".</b> (hostname_exit_code: $hostname_exit_code)</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   local hostname_exit_code="0"
   hostname_output="$(hostname 2>&1)" || { hostname_exit_code="$?" ; true; };
   if [ ! "$hostname_exit_code" = "0" ]; then
      hostname_exit_code_was_non_zero="true"
   fi
   if [ "$hostname_output" = "host" ]; then
      local MSG="<p>Check Hostname Result: \"hostname\" output is \"host\", ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   else
      hostname_discouraged_setting_detected="true"
      local MSG="<p>Check Hostname Result: <b>\"hostname\" output is not \"host\", \
it is \"$hostname_output\".</b> (hostname_exit_code: $hostname_exit_code)</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   local hostname_exit_code="0"
   hostname_ip_address_output="$(hostname --ip-address 2>&1)" || { hostname_exit_code="$?" ; true; };
   if [ ! "$hostname_exit_code" = "0" ]; then
      hostname_exit_code_was_non_zero="true"
   fi
   if [ "$hostname_ip_address_output" = "127.0.0.1" ]; then
      local MSG="<p>Check Hostname Result: \"hostname --ip-address\" output is \"127.0.0.1\", ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   else
      hostname_discouraged_setting_detected="true"
      local MSG="<p>Check Hostname Result: <b>\"hostname --ip-address\" is not \
\"127.0.0.1\", it is \"$hostname_ip_address_output\".</b> (hostname_exit_code: $hostname_exit_code)</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   local hostname_exit_code="0"
   hostname_domain_output="$(hostname --domain 2>&1)" || { hostname_exit_code="$?" ; true; };
   if [ ! "$hostname_exit_code" = "0" ]; then
      hostname_exit_code_was_non_zero="true"
   fi
   if [ "$hostname_domain_output" = "localdomain" ]; then
      local MSG="<p>Check Hostname Result: \"hostname --ip-address\" output is \"localdomain\", ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   else
      hostname_discouraged_setting_detected="true"
      local MSG="<p>Check Hostname Result: <b>\"hostname --domain\" is not \
\"localdomain\"</b>, it is \"$hostname_domain_output\". (hostname_exit_code: $hostname_exit_code)</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   if [ "$hostname_exit_code_was_non_zero" = "true" ]; then
      hostname_discouraged_setting_detected="true"
      local MSG="<p>Check Hostname Result: <b>\"hostname\" exited at least once with \
a non-zero exit code.</b> This is probably a network misconfiguration. See above.</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   if [ "$hostname_discouraged_setting_detected" = "true" ]; then
      local MSG="<p>Check Hostname Result:
<br></br><b>Hostname settings different from Whonix defaults.</b> (See above.)</p>
<p>
It is generally recommended to keep the default as per Whonix Design. [1]
If you did not change hostname related settings, please report this Whonix bug.
If you know what you are doing and changed this on purpose, feel free to
disable this check. [2]</p>

<p>[1] <a href=https://www.whonix.org/wiki/Dev/Design-Shared#Username.2C_FQDN.2C_hostname>https://www.whonix.org/wiki/Dev/Design-Shared#Username.2C_FQDN.2C_hostname</a>
<br></br>[2] Create a file <code>/etc/whonix.d/50_whonixcheck_user</code> and add:
<code><blockquote>whonixcheck_skip_functions+=\" $FUNCNAME \"</blockquote></code></p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi
}
